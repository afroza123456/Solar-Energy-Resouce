if (!String.prototype.startsWith) {
    String.prototype.startsWith = function(b, a) {
        a = a || 0;
        return this.substr(a, b.length) === b
    }
}
var DXMTracking = {
    rpUrlId: "",
    dRpUrlId: "",
    currentPage: "",
    intAlreadyDone: false,
    dxmurl: "//mpactions.superpages.com/actionthru/",
    rpurl: "http://mydex.com/RPS",
    src: "",
    init: function() {
        if (!window.addEventListener) {
            return
        }
        DXMTracking.currentPage = window.location.href;
        var a = (window === window.parent) ? false : true;
        $dxmUtil.getParameters();
        if (($dxmUtil.dxmclickid == "" && $dxmUtil.dxmrpid == "" && !$dxmUtil.checkPathValues()) || DXMTracking.intAlreadyDone) {
            return
        }
        DXMTracking.intAlreadyDone = true;
        if (!a) {
            if ($dxmUtil.getReqParam("dxmnol") !== "true") {
                DXMTracking.trackingConversion({
                    convType: "VIEW",
                    desc: window.location.href
                })
            }
        }
        window.addEventListener("submit", DXMTracking.submithandler, false);
        if (document.readyState === "complete" || document.readyState === "interactive") {
            if (!a) {
                DXMTracking.dxmload()
            } else {
                DXMTracking.initFrame()
            }
        } else {
            if (!a) {
                document.addEventListener("DOMContentLoaded", DXMTracking.dxmload, false)
            } else {
                document.addEventListener("DOMContentLoaded", DXMTracking.initFrame, false)
            }
        }
    },
    dxmload: function() {
        var b = $dxmUtil.dxmclickid;
        var a = $dxmUtil.dxmrpid;
        if (b != "" || a != "") {
            var e = $dxmUtil.getTrackingJson(b);
            if (e !== null) {
                DXMTracking.process(e)
            } else {
                var c = DXMTracking.dxmurl.concat((b != "" ? ("tracking/" + b) : ("rptracking/" + a)), "?callback=processdata");
                try {
                    $jsonp.send(c, {
                        callbackName: "processdata",
                        onSuccess: function(f) {
                            DXMTracking.process(f);
                            $dxmUtil.cacheTrackingJson(f)
                        },
                        onTimeout: function() {},
                        timeout: 5
                    })
                } catch (d) {}
            }
            dxmupdateUrlPath();
            DXMTracking.trackingIframe();
            DXMTracking.trackingVideo();
            $dxmUtil.newIframeObserver();
            window.addEventListener("click", function(g) {
                DXMTracking.trackingIframe();
                var f = DXMTracking.getTarget(g);
                if (f.tagName == "A") {
                    if (f.pathname.indexOf(".pdf") > 0 || f.hostname.indexOf("bbb.org") >= 0 || f.href.indexOf("go.thryv.com") !== -1) {
                        DXMTracking.trackingConversion({
                            convType: "VIEW",
                            desc: f.href
                        })
                    }
                    if (f.hostname.indexOf("youtube.com") >= 0 || f.hostname.indexOf("youtu.be") >= 0) {
                        DXMTracking.trackingConversion({
                            convType: "PLAYED_VIDEO",
                            desc: f.href
                        })
                    }
                    if (f.href.indexOf("play.google.com") !== -1 || f.href.indexOf("itunes.apple.com") !== -1) {
                        DXMTracking.trackingConversion({
                            convType: "DOWNLOAD_APP",
                            desc: f.href
                        })
                    }
                }
            });
            setInterval(function() {
                $dxmUtil.replaceImagePhoneList();
                $dxmUtil.replacePhoneNumbers()
            }, 1000)
        }
    },
    initFrame: function() {
        dxmloadIFrame()
    },
    process: function process(c) {
        if (c.hasOwnProperty("dRpUrlId")) {
            DXMTracking.rpUrlId = c.rpUrlId;
            DXMTracking.dRpUrlId = c.dRpUrlId
        }
        if (c.hasOwnProperty("src")) {
            DXMTracking.src = c.src
        }
        var d = c.trackingnumbers;
        var b = [];
        var e = [];
        d.forEach(function(f) {
            b.push(f.cn);
            e.push(f.tn)
        });
        $dxmUtil.replacePhoneNumbers(b, e);
        if (c.hasOwnProperty("vanitynumbers") && c.vanitynumbers.length > 0) {
            $dxmUtil.replaceVanityPhoneList(c.vanitynumbers)
        }
        var a = c.trackingimages;
        if (a.length > 0) {
            $dxmUtil.replaceImagePhoneList(a)
        }
        if (window.postMessage) {
            window.addEventListener("message", function(f) {
                if (f.data === "gettrackingdata") {
                    f.source.postMessage([$dxmUtil.clientPhoneNumbers, $dxmUtil.trackingPhoneNumbers], "*")
                }
            }, false)
        }
        if (c.hasOwnProperty("jsfilename")) {
            $dxmUtil.loadScript("ext/" + c.jsfilename)
        }
        DXMTracking.trackingMailto();
        setTimeout(function() {
            DXMTracking.trackingIframe();
            $dxmUtil.replacePhoneNumbers();
            $dxmUtil.replaceImagePhoneList();
            dxmupdateUrlPath()
        }, 3000)
    },
    dontsendsubmit: [],
    addExcludedElem: function(b) {
        var a = $dxmUtil.inputFieldsCount(b);
        this.dontsendsubmit.push(b.getAttribute("name") + "||" + b.id + "||" + a)
    },
    submithandler: function(d) {
        var c = DXMTracking.getTarget(d);
        if (c.tagName == "FORM") {
            var a = $dxmUtil.inputFieldsCount(c);
            var b = c.getAttribute("name") + "||" + c.id + "||" + a;
            if (DXMTracking.dontsendsubmit.indexOf(b) === -1) {
                DXMTracking.sendConversionRequest(c)
            }
        }
    },
    trackingIframe: function() {
        if ($dxmUtil.dxmclickid == "" && $dxmUtil.dxmrpid == "") {
            return
        }
        var c = document.getElementsByTagName("iframe");
        for (var a = 0; a < c.length; a++) {
            var b = c[a];
            if (b.src.indexOf("youtube.com/embed") > 0) {} else {
                if (!$dxmUtil.dontfollow(b.src) || !DXMTracking.thirdPartyIframe(b)) {
                    b.addEventListener("load", function(f) {
                        var d = DXMTracking.getTarget(f);
                        if (DXMTracking.thirdPartyIframe(d)) {
                            DXMTracking.update3rdPartyFrame(d)
                        }
                    }, false);
                    if (DXMTracking.thirdPartyIframe(b)) {
                        DXMTracking.update3rdPartyFrame(b)
                    }
                }
            }
        }
    },
    thirdPartyIframe: function(c) {
        var b = document.createElement("a");
        b.href = c.src;
        return b.host != window.location.host
    },
    update3rdPartyFrame: function(c) {
        if (c.src.indexOf("actionthru/proxy") === -1 && !$dxmUtil.dontfollow(c.src) && c.src.indexOf(":blank") === -1) {
            try {
                var b = c.src.substring(c.src.indexOf("//") + 2);
                var a = $dxmUtil.dxmproxy + "proxy/" + b;
                a = a + (a.indexOf("?") > 0 ? "&dxmclid=" + $dxmUtil.dxmclickid : "?dxmclid=" + $dxmUtil.dxmclickid);
                c.src = a
            } catch (d) {
                console.log(d)
            }
        }
    },
    trackingConversionPOST: function(b) {
        var a = $dxmUtil.dxmclickid;
        if (a != "") {
            try {
                var c = "VIEW";
                if (b.hasOwnProperty("convType")) {
                    c = b.convType.toUpperCase()
                }
                var f = "";
                if (b.hasOwnProperty("desc")) {
                    f = encodeURI(b.desc)
                }
                var g = new XMLHttpRequest();
                g.open("POST", DXMTracking.dxmurl + "act");
                g.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
                var d = JSON.stringify({
                    clickId: encodeURI(a),
                    actionType: c,
                    actionDesc: f
                });
                g.send(d)
            } catch (e) {}
        }
    },
    trackingConversion: function(c) {
        var b = $dxmUtil.dxmclickid;
        if (b != "" || ($dxmUtil.channelClickId != "" && $dxmUtil.dxmrpid != "")) {
            try {
                var a = DXMTracking.dxmurl + "at?type=ACTION";
                if (b != "") {
                    a = a + "&userid=" + encodeURI(b)
                } else {
                    if ($dxmUtil.channelClickId != "" && $dxmUtil.channelParamName != "") {
                        a = a + "&" + $dxmUtil.channelParamName + "=" + encodeURI($dxmUtil.channelClickId);
                        a = a + "&uid=" + encodeURI($dxmUtil.dxmrpid)
                    }
                }
                var d = "VIEW";
                if (c.hasOwnProperty("convType")) {
                    d = c.convType.toUpperCase()
                }
                a = a + "&atype=" + d;
                if (c.hasOwnProperty("desc")) {
                    a = a + "&adesc=" + encodeURI(c.desc)
                }
                var f = new XMLHttpRequest();
                f.open("GET", a, true);
                f.send(null)
            } catch (e) {}
        }
    },
    sendConversionRequest: function(c) {
        var b = $dxmUtil.inputFieldsCount(c);
        var d = c.getAttribute("name");
        var a = (d === null ? "" : d) + "||" + c.id + "||" + b;
        DXMTracking.trackingConversion({
            convType: "FORM",
            desc: a
        })
    },
    trackingMailto: function() {
        if (($dxmUtil.dxmclickid != "" || ($dxmUtil.channelClickId != "" && $dxmUtil.dxmrpid != "")) && DXMTracking.rpUrlId != "") {
            var d = document.getElementsByTagName("a");
            for (var c = 0; c < d.length; c++) {
                var b = d[c];
                if (b.href.toLowerCase().indexOf("mailto:") >= 0) {
                    if (b.href.indexOf("DXMTracking.emailto") < 0) {
                        b.href = "javascript:DXMTracking.emailto('" + b.href + "');"
                    }
                } else {
                    if (b.href.indexOf("play.google.com/store/apps") !== -1 || b.href.indexOf("itunes.apple.com/us/app") !== -1) {
                        b.addEventListener("click", function(f) {
                            var a = DXMTracking.getTarget(f);
                            DXMTracking.trackingConversion({
                                convType: "DOWNLOAD_APP",
                                desc: a.href
                            })
                        }, false)
                    }
                }
            }
        }
    },
    getTarget: function(b) {
        var a = b || window.event;
        return a.srcElement || b.target
    },
    emailto: function(b) {
        if (DXMTracking.rpUrlId != "" && ($dxmUtil.dxmclickid != "" || ($dxmUtil.channelClickId != "" && $dxmUtil.dxmrpid != ""))) {
            b = b.substring(b.indexOf(":") + 1, b.length);
            var a = this.rpurl.concat("/Contact.do");
            if ($dxmUtil.dxmclickid != "") {
                a = a.concat("?userid=").concat($dxmUtil.dxmclickid)
            } else {
                a = a.concat("?").concat($dxmUtil.channelParamName).concat("=").concat($dxmUtil.channelClickId)
            }
            a = a.concat("&ed=").concat(b);
            a = a.concat("&uid=").concat(DXMTracking.rpUrlId).concat("&duid=").concat(DXMTracking.dRpUrlId);
            if (DXMTracking.src != "") {
                a = a + "&src=" + DXMTracking.src
            }
            window.open(a, "emw", "scrollbars=no,toolbar=no,menubar=no,location=no,directories=no,status=no,resizable=no,top=20,left=30,width=580,height=600")
        }
    },
    trackingVideo: function() {
        var e = document.getElementsByTagName("iframe");
        var d = false;
        var a = false;
        for (var b = 0; b < e.length; b++) {
            var c = e[b];
            if (c.src.indexOf("youtube.com/embed") > 0 && c.src.indexOf("autoplay=1") === -1) {
                if (c.id === null || c.id == "") {
                    c.id = "dxmiframeyoutube" + b
                }
                c.src = c.src + (c.src.indexOf("?") > 0 ? "&enablejsapi=1&html5=1" : "?enablejsapi=1&html5=1");
                a = true
            } else {
                if (c.src.indexOf("player.vimeo.com/video") > 0 && c.src.indexOf("autoplay=1") === -1) {
                    d = true
                }
            }
        }
        if (a) {
            $dxmUtil.loadScript("https://www.youtube.com/iframe_api")
        }
        if (d) {
            $dxmUtil.loadScript("https://player.vimeo.com/api/player.js");
            setTimeout(DXMTracking.onVimeoAPIReady, 2000)
        }
    },
    playerStatus: new Map(),
    onVimeoAPIReady: function() {
        var f = document.getElementsByTagName("iframe");
        for (var b = 0; b < f.length; b++) {
            var d = f[b];
            if (d.src.indexOf("player.vimeo.com/video") > 0) {
                DXMTracking.playerStatus.set(d.src, -1);
                var a = new Vimeo.Player(d);
                a.on("play", function(h) {
                    var i = this;
                    var g = i.element;
                    if (DXMTracking.playerStatus.get(g.src) == -1) {
                        DXMTracking.trackingConversion({
                            convType: "PLAYED_VIDEO",
                            desc: g.src
                        });
                        DXMTracking.playerStatus.set(d.src, 1)
                    }
                })
            }
        }
        var c = document.getElementsByTagName("video");
        for (var b = 0; b < c.length; b++) {
            var e = c[b];
            if (e.getAttribute("autoplay") !== "autoplay") {
                if (e.id === null || e.id == "") {
                    e.id = "dxmhtml5video" + b
                }
                DXMTracking.playerStatus.set(e.id, -1);
                e.addEventListener("play", function(h) {
                    var g = DXMTracking.getTarget(h);
                    if (DXMTracking.playerStatus.get(g.id) == -1) {
                        DXMTracking.trackingConversion({
                            convType: "PLAYED_VIDEO",
                            desc: g.currentSrc
                        });
                        DXMTracking.playerStatus.set(g.id, 1)
                    }
                }, false)
            }
        }
    },
    onYoutubePlayerReady: function(c) {
        var a = c.target;
        var b = a.a;
        DXMTracking.playerStatus.set(b.id, -1);
        a.addEventListener("onStateChange", function(f) {
            var d = f.target;
            var e = d.a;
            if (f.data === YT.PlayerState.PLAYING && DXMTracking.playerStatus.get(e.id) !== YT.PlayerState.PLAYING) {
                DXMTracking.playerStatus.set(e.id, f.data);
                DXMTracking.trackingConversion({
                    convType: "PLAYED_VIDEO",
                    desc: d.getVideoUrl()
                })
            }
        })
    },
    loadAnuraJS: function() {
        var b = $dxmUtil.getReqParam("dxmclid");
        if (b !== "") {
            var d = document.createElement("script");
            if ("object" === typeof d) {
                var f = [];
                var e = {
                    instance: 988083525,
                    campaign: encodeURIComponent(b),
                    exid: encodeURIComponent(b)
                };
                for (var a in e) {
                    f.push(a + "=" + e[a])
                }
                f.push(Math.floor(1000000000000 * Math.random() + 1));
                d.type = "text/javascript";
                d.async = true;
                d.src = "https://script.anura.io/request.js?" + f.join("&");
                var c = document.getElementsByTagName("script")[0];
                c.parentNode.insertBefore(d, c)
            }
        }
    },
};

function onYouTubeIframeAPIReady() {
    var d = document.getElementsByTagName("iframe");
    for (var b = 0; b < d.length; b++) {
        var c = d[b];
        if (c.src.indexOf("youtube.com/embed") > 0 && c.src.indexOf("autoplay=1") === -1) {
            var a = new YT.Player(c.id, {
                events: {
                    onReady: DXMTracking.onYoutubePlayerReady
                }
            })
        }
    }
}
var $jsonp = (function() {
    var a = {};
    a.send = function(h, e) {
        var b = e.callbackName || "callback",
            i = e.onSuccess || function() {},
            g = e.onTimeout || function() {},
            f = e.timeout || 10;
        var d = window.setTimeout(function() {
            window[b] = function() {};
            g()
        }, f * 1000);
        window[b] = function(j) {
            window.clearTimeout(d);
            i(j)
        };
        var c = document.createElement("script");
        c.type = "text/javascript";
        c.async = true;
        c.src = h;
        document.getElementsByTagName("head")[0].appendChild(c)
    };
    return a
})();
var $dxmUtil = {
    clientPhoneNumbers: [],
    trackingPhoneNumbers: [],
    cachedImageNumberList: [],
    cachedVanityPhoneList: [],
    phoneregexp: "(1)?(\\(|\\([ ])?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})",
    acturl: "/actionthru/proxy/",
    dxmclickid: "",
    dxmrpid: "",
    channelClickId: "",
    channelParamName: "",
    phoneFormat: ["{0}-{1}-{2}", "({0}){1}{2}", "({0}){1}-{2}", "({0}) {1}-{2}", "{0}.{1}.{2}", "{0} {1} {2}", "({0}) {1}{2}", "({0}) {1} {2}", "({0})-{1}-{2}", "{0} {1}-{2}", "{0}.{1}-{2}"],
    getParameters: function() {
        var c = $dxmUtil.getReqParam("dxmclid");
        if (c != "") {
            $dxmUtil.dxmclickid = c;
            $dxmUtil.setCookie("dxmclid", c);
            var d = new Date(),
                b = "expires=";
            d.setDate(d.getDate() + 2);
            b += d.toUTCString();
            document.cookie = "dxmclid=" + c + "; " + b + "; path=/"
        } else {
            var a = $dxmUtil.getReqParam("rpid");
            if (a !== "") {
                $dxmUtil.dxmrpid = a;
                this.setCookie("rpid", a);
                this.setCookie("dxmclid", "")
            } else {
                $dxmUtil.dxmclickid = this.getCookie("dxmclid");
                $dxmUtil.dxmrpid = this.getCookie("rpid")
            }
        }
        var e = $dxmUtil.getReqParam("gclid");
        if (e != "") {
            $dxmUtil.channelClickId = e;
            $dxmUtil.setCookie("channelClickId", e);
            $dxmUtil.channelParamName = "gclid";
            $dxmUtil.setCookie("channelParamName", "gclid");
            var d = new Date(),
                b = "expires=";
            d.setDate(d.getDate() + 2);
            b += d.toUTCString();
            document.cookie = "channelClickId=" + e + "; " + b + "; path=/"
        } else {
            $dxmUtil.channelClickId = this.getCookie("channelClickId");
            $dxmUtil.channelParamName = this.getCookie("channelParamName")
        }
    },
    format: function(c, a) {
        var b = new RegExp("{-?[0-9]+}", "g");
        return c.replace(b, function(f) {
            var e = parseInt(f.substring(1, f.length - 1));
            var d;
            if (e >= 0) {
                d = a[e]
            } else {
                if (e === -1) {
                    d = "{"
                } else {
                    if (e === -2) {
                        d = "}"
                    } else {
                        d = ""
                    }
                }
            }
            return d
        })
    },
    getCookie: function(b) {
        var a = "";
        var d = window.localStorage;
        if (d != "undefined") {
            try {
                a = d.getItem(b);
                if (a === null) {
                    a = $dxmUtil.getRealCookie(b)
                }
            } catch (c) {
                a = $dxmUtil.getRealCookie(b)
            }
        } else {
            a = $dxmUtil.getRealCookie(b)
        }
        return (a === null || a == "null") ? "" : a
    },
    getRealCookie: function(e) {
        var d = e + "=";
        var b = "";
        var a = decodeURIComponent(document.cookie).split(";");
        for (var f = 0; f < a.length; f++) {
            var g = a[f];
            while (g.charAt(0) == " ") {
                g = g.substring(1)
            }
            if (g.indexOf(d) == 0) {
                b = g.substring(d.length, g.length)
            }
        }
        return b
    },
    setCookie: function(a, c) {
        var d = window.localStorage;
        if (d != "undefined") {
            try {
                d.setItem(a, c)
            } catch (b) {
                document.cookie = a + "=" + c
            }
        } else {
            document.cookie = a + "=" + c
        }
    },
    getReqParam: function(e) {
        var d = [],
            c;
        var a = window.location.href.slice(window.location.href.indexOf("?") + 1).split("&");
        for (var b = 0; b < a.length; b++) {
            c = a[b].split("=");
            if (e == c[0]) {
                return c[1]
            }
        }
        return ""
    },
    tomatched: [],
    frommatched: [],
    replacePhoneNumbers: function(l, b) {
        if (arguments.length == 2) {
            $dxmUtil.clientPhoneNumbers = l;
            $dxmUtil.trackingPhoneNumbers = b;
            $dxmUtil.updatePhoneNumberCSS(l, b)
        } else {
            l = $dxmUtil.clientPhoneNumbers;
            b = $dxmUtil.trackingPhoneNumbers
        }
        $dxmUtil.tomatched = [];
        $dxmUtil.frommatched = [];
        var j = document.body.innerHTML.match(new RegExp(this.phoneregexp, "g"));
        if (j !== null && j.length > 0) {
            j.forEach(function(p) {
                var t = p.replace(/\D/g, "");
                if (t.length == 11 && t.charAt(0) == "1") {
                    t = t.substring(1)
                }
                var n = l.indexOf(t);
                if (n !== -1) {
                    var o = b[n];
                    var r = 0;
                    var k = "";
                    for (var m = 0; m <= p.length - 1 && r <= 10; m++) {
                        var s = p.charAt(m);
                        if ("0123456789".indexOf(s) !== -1 && s == t.charAt(r)) {
                            k = k + o.charAt(r++)
                        } else {
                            k = k + s
                        }
                    }
                    var q = $dxmUtil.escapeRegExp(p);
                    $dxmUtil.frommatched.push(new RegExp(q, "g"));
                    $dxmUtil.tomatched.push(k)
                }
            });
            phoneno = new RegExp(this.phoneregexp);
            if ($dxmUtil.frommatched.length > 0) {
                var a = document.body.getElementsByTagName("*");
                for (var g = 0; g < a.length; g++) {
                    var e = a[g];
                    if (e.tagName == "IMG") {
                        continue
                    }
                    if (e.outerHTML && e.outerHTML.search(phoneno) != -1) {
                        if (e.tagName == "A") {
                            var c = e.outerHTML;
                            for (var f = 0; f < $dxmUtil.frommatched.length; f++) {
                                c = c.replace($dxmUtil.frommatched[f], $dxmUtil.tomatched[f])
                            }
                            if (e.outerHTML != c) {
                                e.outerHTML = c
                            }
                        } else {
                            var d = e.childNodes;
                            for (var f = 0; f < d.length; f++) {
                                if (d[f].nodeType == Node.TEXT_NODE) {
                                    var c = d[f].nodeValue;
                                    for (var h = 0; h < $dxmUtil.frommatched.length; h++) {
                                        c = c.replace($dxmUtil.frommatched[h], $dxmUtil.tomatched[h])
                                    }
                                    d[f].nodeValue = c
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    escapeRegExp: function(a) {
        return a.replace(/[.*+?^${}()|[\]\\]/g, "\\$&")
    },
    getClickId: function() {
        var a = this.getReqParam("dxmclid");
        if (a == "" || a == "null") {
            a = this.getCookie("dxmclid")
        } else {
            this.setCookie("dxmclid", a)
        }
        return a
    },
    replaceVanityPhoneList: function(c) {
        if (arguments.length > 0) {
            $dxmUtil.cachedVanityPhoneList = c
        } else {
            c = $dxmUtil.cachedVanityPhoneList
        }
        if (c.length > 0) {
            var b = [];
            c.forEach(function(i) {
                b.push($dxmUtil.escapeRegExp(i.cn))
            });
            var e = new RegExp(b.join("|"));
            var a = document.body.getElementsByTagName("*");
            for (var j = 0; j < a.length; j++) {
                var g = a[j];
                if (g.outerHTML && g.outerHTML.search(e) != -1) {
                    if (g.tagName == "A") {
                        var d = g.innerHTML;
                        for (var h = 0; h < c.length; h++) {
                            d = d.replace(c[h].cn, c[h].tn)
                        }
                        g.innerHTML = d
                    } else {
                        var f = g.childNodes;
                        for (var h = 0; h < f.length; h++) {
                            if (f[h].nodeType == Node.TEXT_NODE) {
                                var d = f[h].nodeValue;
                                for (var l = 0; l < c.length; l++) {
                                    d = d.replace(c[l].cn, c[l].tn)
                                }
                                f[h].nodeValue = d
                            }
                        }
                    }
                }
            }
        }
    },
    replaceImagePhoneList: function(c) {
        if (arguments.length > 0) {
            $dxmUtil.cachedImageNumberList = c
        } else {
            c = $dxmUtil.cachedImageNumberList
        }
        if (c.length > 0) {
            $dxmUtil.updateBackgroundImageCSS($dxmUtil.cachedImageNumberList);
            var e = ["src", "src2", "data-src", "data-lazy-src", "data-lazyload", "data-original", "dynsrc", "lowsrc", "data-dm-image-path"];
            var a = document.body.getElementsByTagName("IMG");
            for (var g = 0; g < a.length; g++) {
                for (var f = 0; f < e.length; f++) {
                    $dxmUtil.checkAndReplaceImage(a[g], e[f], c)
                }
                $dxmUtil.replaceImageSrcSet(a[g], c)
            }
            a = document.body.getElementsByTagName("image");
            for (var g = 0; g < a.length; g++) {
                $dxmUtil.checkAndReplaceImage(a[g], "xlink:href", c)
            }
            a = document.body.getElementsByTagName("DIV");
            for (var g = 0; g < a.length; g++) {
                var d = a[g];
                $dxmUtil.checkAndReplaceImage(d, "src", c);
                $dxmUtil.checkAndReplaceImage(d, "data-src", c);
                $dxmUtil.checkAndReplaceImage(d, "data-background-image", c);
                $dxmUtil.dexhubImageReplacementCustomization(d, c);
                var h = $dxmUtil.getBackgroundImageFilename(d, "background-image");
                var k = $dxmUtil.getStyle(d, "background-image");
                if (h === "") {
                    continue
                }
                if (arguments.length > 0) {
                    $dxmUtil.createStyleChangeObserver(d)
                }
                for (var f = 0; f < c.length; f++) {
                    if (h === c[f].from) {
                        var b = 'url("' + c[f].to + '")';
                        d.style.setProperty("background-image", 'url("' + c[f].to + '")', "important")
                    }
                }
            }
            $dxmUtil.replaceBackgroundImage(document.body.getElementsByTagName("A"), c);
            $dxmUtil.replaceBackgroundImage(document.body.getElementsByTagName("TD"), c);
            $dxmUtil.replaceBackgroundImage(document.body.getElementsByTagName("LI"), c);
            $dxmUtil.replaceBackgroundImage(document.body.getElementsByTagName("SECTION"), c)
        }
    },
    replaceBackgroundImage: function(f, a) {
        for (var c = 0; c < f.length; c++) {
            var d = f[c];
            var g = $dxmUtil.getBackgroundImageFilename(d, "background-image");
            if (g !== "") {
                for (var b = 0; b < a.length; b++) {
                    if (g === a[b].from) {
                        var e = 'url("' + a[b].to + '")';
                        d.style.setProperty("background-image", e, "important")
                    }
                }
            }
        }
    },
    updatePhoneNumberCSS: function(t, w) {
        var q = [];
        var s = [];
        var a = ["{0}-{1}-{2}", "{0}{1}{2}", "({0}){1}{2}", "({0}){1}-{2}", "({0}) {1}-{2}", "{0}.{1}.{2}", "{0} {1} {2}", "({0}) {1}{2}"];
        for (var p = 0; p < t.length; p++) {
            var r = t[p];
            var o = w[p];
            var v = [o.substring(0, 3), o.substring(3, 6), o.substring(6)];
            var u = [r.substring(0, 3), r.substring(3, 6), r.substring(6)];
            q.push([]);
            s.push([]);
            for (var n = 0; n < a.length; n++) {
                q[p].push($dxmUtil.format(a[n], v));
                s[p].push($dxmUtil.format(a[n], u))
            }
        }
        for (var p = 0; p < document.styleSheets.length; p++) {
            var b = document.styleSheets[p];
            try {
                if (b.cssRules === undefined || b.cssRules === null) {
                    continue
                }
            } catch (c) {
                continue
            }
            for (var f = 0; f < b.cssRules.length; f++) {
                var h = false;
                var g = "";
                try {
                    g = b.cssRules[f].cssText
                } catch (c) {}
                var d = g;
                var h = false;
                for (var m = 0; m < t.length; m++) {
                    var e = s[m];
                    var l = q[m];
                    for (var n = 0; n < a.length; n++) {
                        g = g.replace(e[n], l[n]);
                        if (g != d) {
                            h = true
                        }
                    }
                }
                if (h) {
                    b.deleteRule(f);
                    b.insertRule(g, f)
                }
            }
        }
    },
    format: function(c, a) {
        var b = new RegExp("{-?[0-9]+}", "g");
        return c.replace(b, function(f) {
            var e = parseInt(f.substring(1, f.length - 1));
            var d;
            if (e >= 0) {
                d = a[e]
            } else {
                if (e === -1) {
                    d = "{"
                } else {
                    if (e === -2) {
                        d = "}"
                    } else {
                        d = ""
                    }
                }
            }
            return d
        })
    },
    updateBackgroundImageCSS: function(a) {
        for (var e = 0; e < document.styleSheets.length; e++) {
            var h = document.styleSheets[e];
            try {
                if (h.cssRules === undefined || h.cssRules === null) {
                    continue
                }
            } catch (c) {
                continue
            }
            for (var k = 0; k < h.cssRules.length; k++) {
                var f = "";
                try {
                    f = h.cssRules[k].cssText
                } catch (c) {}
                if (f.indexOf("background-image") !== -1) {
                    var b = f.match(/url\(([^)]+)\)/i);
                    if (b != null) {
                        var l = (f.match(/url\([^\)]+\)/gi) || [""])[0].split(/[()'"]+/)[1];
                        if (l.indexOf("img.superpages.com") === -1) {
                            var g = $dxmUtil.getImageFilename(l);
                            for (var d = 0; d < a.length; d++) {
                                if (g === a[d].from) {
                                    f = f.replace(l, a[d].to);
                                    h.deleteRule(k);
                                    h.insertRule(f, k)
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    getStyle: function(b, a) {
        if (window.getComputedStyle) {
            return getComputedStyle(b, "")[a]
        }
        if (b.currentStyle) {
            return b.currentStyle[a]
        }
    },
    getImageFilename: function(a) {
        if (typeof a != "undefined" && a) {
            var b = "";
            if (a.indexOf("/Satellite?") >= 0) {
                b = $dxmUtil.detectDynamicImageFileName(a)
            } else {
                b = $dxmUtil.getImageFileNameFromUrl(a)
            }
            return b
        }
        return ""
    },
    getImageFileNameFromUrl: function(a) {
        var e = a.split("?");
        var d = e[0].split("/");
        imgFilename = d[d.length - 1];
        imgFilename = imgFilename.replace(/%2B/g, "_").replace(/%2C/g, "_").replace(/%29/g, "+").replace(/%26/g, "+").replace(/%28/g, "+").replace(/%2D/g, "-").replace(/%2E/g, "_").replace(/%21/g, "_").replace(/%E2/g, "_").replace(/%80/g, "_").replace(/%94/g, "_");
        imgFilename = imgFilename.split("+").join("_");
        var c = imgFilename.lastIndexOf(".");
        if (c !== -1) {
            var b = imgFilename.substring(0, c).replace(/\./g, "_");
            imgFilename = b + "." + imgFilename.substring(c + 1)
        }
        return imgFilename
    },
    getBackgroundImageFilename: function(b, a) {
        var c = $dxmUtil.getStyle(b, a);
        if (c == "none") {
            return ""
        }
        return this.extractImageFileName(c)
    },
    extractImageFileName: function(e) {
        e = e.replace(/\"/g, "").replace(/\)/, "");
        var d = e.split("?");
        var c = d[0].split("/");
        var f = c[c.length - 1];
        f = f.replace(/%2E/g, ".");
        var b = f.lastIndexOf(".");
        if (b !== -1) {
            var a = f.substring(0, b).replace(/\./g, "_");
            f = a + "." + f.substring(b + 1)
        }
        f = f.replace(/%2B/g, "_").replace(/%2C/g, "_").replace(/%29/g, "+").replace(/%26/g, "_").replace(/%28/g, "+").replace(/%2D/g, "-").replace(/%21/g, "_").replace(/%E2/g, "_").replace(/%80/g, "_").replace(/%94/g, "_");
        f = f.split("+").join("_");
        return f
    },
    getImageAttributeFilename: function(b, a) {
        var c = b.getAttribute(a);
        if (c === null) {
            return ""
        }
        return $dxmUtil.getImageFilename(c)
    },
    detectDynamicImageFileName: function(b) {
        var a = "";
        if (b.indexOf("/Satellite?") >= 0 && b.indexOf("Content-Disposition") > 0 && b.indexOf("inline") > 0 && b.indexOf("filename") > 0) {
            var e = b.split("?");
            var d = e[1].split("&");
            for (var c = 0; c < d.length; c++) {
                if (d[c].indexOf("filename%3D") > 0) {
                    a = d[c].substring(d[c].indexOf("filename%3D") + 11);
                    break
                }
            }
        }
        return a
    },
    checkAndReplaceImage: function(d, c, a) {
        var f = $dxmUtil.getImageAttributeFilename(d, c);
        if (f === "") {
            return
        }
        var e = false;
        for (var b = 0; b < a.length; b++) {
            if (f.toLowerCase() === a[b].from.toLowerCase()) {
                d.setAttribute(c, a[b].to)
            }
        }
    },
    replaceImageSrcSet: function(d, c) {
        if (d.getAttribute("srcset") !== null && d.getAttribute("srcset") !== "") {
            var e = d.getAttribute("srcset");
            var h = e.split(",");
            for (var g = 0; g < h.length; g++) {
                var n = h[g];
                var l = n.trim();
                if (l.indexOf(" ") > 0) {
                    l = l.split(" ")[0]
                }
                var k = l.split("/");
                var m = k[k.length - 1];
                for (var f = 0; f < c.length; f++) {
                    if (m == c[f].from) {
                        var o = d.getAttribute("srcset").replace(l, c[f].to);
                        d.setAttribute("srcset", o)
                    }
                }
            }
        }
    },
    inputFieldsCount: function(g) {
        var e = g.elements;
        var b = e.length;
        var f = "hiddenresetsubmitbuttonimage";
        if (isNaN(b)) {
            b = 0;
            var c = g.getElementsByTagName("INPUT");
            for (var d = 0; d < c.length; d++) {
                var a = c[d].getAttribute("type");
                if (a && f.indexOf(a) < 0) {
                    b++
                }
            }
            return b
        } else {
            for (var d = 0; d < e.length; d++) {
                if (f.indexOf(e[d].type) >= 0) {
                    b--
                }
            }
        }
        return b
    },
    dexhubImageReplacementCustomization: function(el, imageNumberList) {
        try {
            if (window["item_" + el.id]) {
                var f = window["item_" + el.id];
                if (f instanceof Array && f[0] instanceof Array) {
                    for (var jj = 0; jj < f[0].length; jj++) {
                        var img = $dxmUtil.extractImageFileName(f[0][jj]);
                        for (var j = 0; j < imageNumberList.length; j++) {
                            if (img === imageNumberList[j].from) {
                                f[0][jj] = imageNumberList[j].to;
                                break
                            }
                        }
                    }
                }
            }
            if (typeof window["MSGTextRotator_" + el.id] == "function") {
                var replaced = false;
                var fstr = window["MSGTextRotator_" + el.id].toString();
                for (var k = 0; k < $dxmUtil.frommatched.length; k++) {
                    if (fstr.indexOf($dxmUtil.frommatched[k]) >= 0) {
                        fstr = fstr.replace($dxmUtil.frommatched[k], $dxmUtil.tomatched[k]);
                        replaced = true
                    }
                }
                if (replaced) {
                    window["MSGTextRotator_" + el.id] = eval(fstr)
                }
            }
            if (typeof window["msginitc_" + el.id] == "function") {
                window["msginitc_" + el.id]()
            }
        } catch (err) {}
    },
    createStyleChangeObserver: function(c) {
        var d = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;
        var a = new d(function(e) {
            e.forEach(function(f) {
                var i = f.target;
                var k = $dxmUtil.getStyle(i, "background-image");
                if (k != "none" && k.indexOf("img.superpages.com") === -1) {
                    k = $dxmUtil.extractImageFileName(k);
                    if (k !== "") {
                        for (var g = 0; g < $dxmUtil.cachedImageNumberList.length; g++) {
                            if (k === $dxmUtil.cachedImageNumberList[g].from) {
                                var h = 'url("' + $dxmUtil.cachedImageNumberList[g].to + '")';
                                i.style.setProperty("background-image", h, "important")
                            }
                        }
                    }
                }
            })
        });
        var b = {
            attributes: true,
            characterData: true,
            childList: false,
            subtree: true
        };
        a.observe(c, b)
    },
    newIframeObserver: function() {
        var c = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;
        var a = new c(function(d) {
            d.forEach(function(e) {
                for (var f = 0; f < e.addedNodes.length; ++f) {
                    if (e.addedNodes[f].tagName == "IFRAME") {
                        if (!$dxmUtil.dontfollow(e.addedNodes[f].src)) {
                            DXMTracking.update3rdPartyFrame(e.addedNodes[f])
                        }
                    }
                }
            })
        });
        var b = {
            subtree: true,
            childList: true
        };
        a.observe(document, b)
    },
    dxmproxy: "//mpactions.superpages.com/actionthru/",
    loadScript: function(b) {
        var a = document.createElement("script");
        a.type = "text/javascript";
        if (b.startsWith("https://") || b.startsWith("http://")) {
            a.src = b
        } else {
            a.src = this.dxmproxy + "js/" + b
        }
        a.async = true;
        document.getElementsByTagName("head")[0].appendChild(a)
    },
    followwebsites: [".dexhub.dexmedia.com", ".thryv.com", "about:blank", "newenglandmotorcar.com"],
    dontfollow: function(a) {
        return true
    },
    cacheTrackingJson: function(b) {
        var a = this.getClickId();
        if (window.sessionStorage != "undefined" && a != "") {
            var c = JSON.stringify(b);
            window.sessionStorage.setItem(a, c)
        }
    },
    getTrackingJson: function(a) {
        if (a != "" && window.sessionStorage != "undefined") {
            var b = window.sessionStorage.getItem(a);
            return b !== null ? JSON.parse(b) : null
        }
        return null
    },
    checkPathValues: function() {
        var c = "";
        var d = window.location.href;
        var g = window.location.pathname;
        var a = g.indexOf("/dxmclid/");
        if (a !== -1) {
            var f = g.substring(a + "/dxmclid/".length);
            d = d.substring(0, d.indexOf("/dxmclid/"));
            var e = f.indexOf("/");
            if (e === -1) {
                c = f
            } else {
                c = f.substring(0, e);
                d = d + f.substring(e)
            }
        }
        var b = "";
        a = g.indexOf("/rpid/");
        if (a !== -1) {
            var f = g.substring(a + "/rpid/".length);
            d = d.substring(0, d.indexOf("/rpid/"));
            var e = g.substring(a + "/rpid/".length).indexOf("/");
            if (e === -1) {
                b = f
            } else {
                b = f.substring(0, e);
                d = d + f.substring(e)
            }
        }
        if (c != "") {
            $dxmUtil.setCookie("dxmclid", c);
            $dxmUtil.dxmclickid = c;
            return true
        } else {
            if (b != "") {
                $dxmUtil.setCookie("rpid", b);
                $dxmUtil.dxmrpid = b;
                return true
            }
        }
        return false
    }
};
if ($dxmUtil.getClickId() != "" && window.location.pathname.indexOf($dxmUtil.acturl) >= 0) {
    var dxmopen = window.XMLHttpRequest.prototype.open;

    function dxmopenReplacement(a, b, d, e, j) {
        this._url = arguments[1];
        if (window.location.pathname.indexOf($dxmUtil.acturl) >= 0 && arguments[1].indexOf(".js") < 0) {
            var k = window.location.pathname.substring($dxmUtil.acturl.length);
            var c = k.substring(0, k.indexOf("/"));
            if (!b.startsWith("http") && !b.startsWith("//") && !b.startsWith($dxmUtil.acturl)) {
                arguments[1] = $dxmUtil.acturl + c + arguments[1]
            } else {
                if ((b.startsWith("http") || b.startsWith("//")) && (b.indexOf($dxmUtil.acturl) < 0 && b.indexOf("/actionthru/at?") < 0 && b.indexOf("/actionthru/act") < 0)) {
                    var i = b.substring(0, b.indexOf("//") + 2);
                    var g = b.substring(b.indexOf("//") + 2);
                    var f = g.substring(g.indexOf("/"));
                    var h = i + g.substring(0, g.indexOf("/")) + $dxmUtil.acturl + c + "/" + f;
                    arguments[1] = h
                }
            }
        }
        return dxmopen.apply(this, arguments)
    }
    window.XMLHttpRequest.prototype.open = dxmopenReplacement
}

function dxmloadIFrame() {
    var b = (window === window.parent) ? false : true;
    if (b && window.location.pathname.indexOf($dxmUtil.acturl) >= 0) {
        var d = document.getElementsByTagName("form");
        var c = document.body.innerHTML.search(new RegExp($dxmUtil.phoneregexp)) !== -1;
        if (d.length == 0 && !c && window.location.href.indexOf("socialdomain") === -1) {
            var a = window.location.href.indexOf("?") !== -1;
            var e = "//" + window.location.href.substring(window.location.href.indexOf($dxmUtil.acturl) + $dxmUtil.acturl.length);
            e = e + (a ? "&dxmiloaded=true" : "?dxmiloaded=true");
            window.location.href = e
        } else {
            if (window.location.href.indexOf("socialdomain") !== -1) {
                $dxmUtil.loadScript("dxmsocialdomain.js")
            }
            if (c) {
                $dxmUtil.loadScript("dxmiframe.js")
            }
        }
    }
}

function dxmupdateUrlPath() {
    if (window.location.pathname.indexOf($dxmUtil.acturl) >= 0) {
        $dxmUtil.loadScript("dxmiframe.js")
    }
}
DXMTracking.init();